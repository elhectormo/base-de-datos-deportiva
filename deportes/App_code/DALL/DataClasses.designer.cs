#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DALL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="deportes")]
	public partial class DataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertActividades(Actividades instance);
    partial void UpdateActividades(Actividades instance);
    partial void DeleteActividades(Actividades instance);
    partial void InsertCategorias(Categorias instance);
    partial void UpdateCategorias(Categorias instance);
    partial void DeleteCategorias(Categorias instance);
    partial void InsertComentarios(Comentarios instance);
    partial void UpdateComentarios(Comentarios instance);
    partial void DeleteComentarios(Comentarios instance);
    partial void InsertImagenes(Imagenes instance);
    partial void UpdateImagenes(Imagenes instance);
    partial void DeleteImagenes(Imagenes instance);
    partial void InsertPublicaciones(Publicaciones instance);
    partial void UpdatePublicaciones(Publicaciones instance);
    partial void DeletePublicaciones(Publicaciones instance);
    partial void InsertUsuarios(Usuarios instance);
    partial void UpdateUsuarios(Usuarios instance);
    partial void DeleteUsuarios(Usuarios instance);
    partial void InsertVideos(Videos instance);
    partial void UpdateVideos(Videos instance);
    partial void DeleteVideos(Videos instance);
    #endregion
		
		public DataClassesDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["deportesConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Actividades> Actividades
		{
			get
			{
				return this.GetTable<Actividades>();
			}
		}
		
		public System.Data.Linq.Table<Categorias> Categorias
		{
			get
			{
				return this.GetTable<Categorias>();
			}
		}
		
		public System.Data.Linq.Table<Comentarios> Comentarios
		{
			get
			{
				return this.GetTable<Comentarios>();
			}
		}
		
		public System.Data.Linq.Table<Imagenes> Imagenes
		{
			get
			{
				return this.GetTable<Imagenes>();
			}
		}
		
		public System.Data.Linq.Table<Publicaciones> Publicaciones
		{
			get
			{
				return this.GetTable<Publicaciones>();
			}
		}
		
		public System.Data.Linq.Table<Usuarios> Usuarios
		{
			get
			{
				return this.GetTable<Usuarios>();
			}
		}
		
		public System.Data.Linq.Table<Videos> Videos
		{
			get
			{
				return this.GetTable<Videos>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Actividades")]
	public partial class Actividades : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IDPublicacion;
		
		private System.Nullable<long> _IDUsuario;
		
		private string _Nombre;
		
		private string _Categoria;
		
		private string _roles;
		
		private System.Nullable<System.TimeSpan> _Fecha;
		
		private System.Nullable<System.DateTime> _Hora;
		
		private string _Descripciondelvideo;
		
		private EntityRef<Usuarios> _Usuarios;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDPublicacionChanging(long value);
    partial void OnIDPublicacionChanged();
    partial void OnIDUsuarioChanging(System.Nullable<long> value);
    partial void OnIDUsuarioChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnCategoriaChanging(string value);
    partial void OnCategoriaChanged();
    partial void OnrolesChanging(string value);
    partial void OnrolesChanged();
    partial void OnFechaChanging(System.Nullable<System.TimeSpan> value);
    partial void OnFechaChanged();
    partial void OnHoraChanging(System.Nullable<System.DateTime> value);
    partial void OnHoraChanged();
    partial void OnDescripciondelvideoChanging(string value);
    partial void OnDescripciondelvideoChanged();
    #endregion
		
		public Actividades()
		{
			this._Usuarios = default(EntityRef<Usuarios>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPublicacion", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IDPublicacion
		{
			get
			{
				return this._IDPublicacion;
			}
			set
			{
				if ((this._IDPublicacion != value))
				{
					this.OnIDPublicacionChanging(value);
					this.SendPropertyChanging();
					this._IDPublicacion = value;
					this.SendPropertyChanged("IDPublicacion");
					this.OnIDPublicacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDUsuario", DbType="BigInt")]
		public System.Nullable<long> IDUsuario
		{
			get
			{
				return this._IDUsuario;
			}
			set
			{
				if ((this._IDUsuario != value))
				{
					if (this._Usuarios.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDUsuarioChanging(value);
					this.SendPropertyChanging();
					this._IDUsuario = value;
					this.SendPropertyChanged("IDUsuario");
					this.OnIDUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(100)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Categoria", DbType="NVarChar(100)")]
		public string Categoria
		{
			get
			{
				return this._Categoria;
			}
			set
			{
				if ((this._Categoria != value))
				{
					this.OnCategoriaChanging(value);
					this.SendPropertyChanging();
					this._Categoria = value;
					this.SendPropertyChanged("Categoria");
					this.OnCategoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_roles", DbType="NVarChar(100)")]
		public string roles
		{
			get
			{
				return this._roles;
			}
			set
			{
				if ((this._roles != value))
				{
					this.OnrolesChanging(value);
					this.SendPropertyChanging();
					this._roles = value;
					this.SendPropertyChanged("roles");
					this.OnrolesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="Time")]
		public System.Nullable<System.TimeSpan> Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hora", DbType="Date")]
		public System.Nullable<System.DateTime> Hora
		{
			get
			{
				return this._Hora;
			}
			set
			{
				if ((this._Hora != value))
				{
					this.OnHoraChanging(value);
					this.SendPropertyChanging();
					this._Hora = value;
					this.SendPropertyChanged("Hora");
					this.OnHoraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripciondelvideo", DbType="NVarChar(100)")]
		public string Descripciondelvideo
		{
			get
			{
				return this._Descripciondelvideo;
			}
			set
			{
				if ((this._Descripciondelvideo != value))
				{
					this.OnDescripciondelvideoChanging(value);
					this.SendPropertyChanging();
					this._Descripciondelvideo = value;
					this.SendPropertyChanged("Descripciondelvideo");
					this.OnDescripciondelvideoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuarios_Actividades", Storage="_Usuarios", ThisKey="IDUsuario", OtherKey="IDusuario", IsForeignKey=true)]
		public Usuarios Usuarios
		{
			get
			{
				return this._Usuarios.Entity;
			}
			set
			{
				Usuarios previousValue = this._Usuarios.Entity;
				if (((previousValue != value) 
							|| (this._Usuarios.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuarios.Entity = null;
						previousValue.Actividades.Remove(this);
					}
					this._Usuarios.Entity = value;
					if ((value != null))
					{
						value.Actividades.Add(this);
						this._IDUsuario = value.IDusuario;
					}
					else
					{
						this._IDUsuario = default(Nullable<long>);
					}
					this.SendPropertyChanged("Usuarios");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Categorias")]
	public partial class Categorias : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IDCategoria;
		
		private string _Categoria;
		
		private EntitySet<Publicaciones> _Publicaciones;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDCategoriaChanging(long value);
    partial void OnIDCategoriaChanged();
    partial void OnCategoriaChanging(string value);
    partial void OnCategoriaChanged();
    #endregion
		
		public Categorias()
		{
			this._Publicaciones = new EntitySet<Publicaciones>(new Action<Publicaciones>(this.attach_Publicaciones), new Action<Publicaciones>(this.detach_Publicaciones));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCategoria", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IDCategoria
		{
			get
			{
				return this._IDCategoria;
			}
			set
			{
				if ((this._IDCategoria != value))
				{
					this.OnIDCategoriaChanging(value);
					this.SendPropertyChanging();
					this._IDCategoria = value;
					this.SendPropertyChanged("IDCategoria");
					this.OnIDCategoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Categoria", DbType="NVarChar(100)")]
		public string Categoria
		{
			get
			{
				return this._Categoria;
			}
			set
			{
				if ((this._Categoria != value))
				{
					this.OnCategoriaChanging(value);
					this.SendPropertyChanging();
					this._Categoria = value;
					this.SendPropertyChanged("Categoria");
					this.OnCategoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Categorias_Publicaciones", Storage="_Publicaciones", ThisKey="IDCategoria", OtherKey="IDCategoria")]
		public EntitySet<Publicaciones> Publicaciones
		{
			get
			{
				return this._Publicaciones;
			}
			set
			{
				this._Publicaciones.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Publicaciones(Publicaciones entity)
		{
			this.SendPropertyChanging();
			entity.Categorias = this;
		}
		
		private void detach_Publicaciones(Publicaciones entity)
		{
			this.SendPropertyChanging();
			entity.Categorias = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Comentarios")]
	public partial class Comentarios : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IDcomentarios;
		
		private System.Nullable<long> _IDusuario;
		
		private System.Nullable<long> _IDvideo;
		
		private string _descripcioncomentarios;
		
		private System.Nullable<long> _IDpublicacion;
		
		private EntityRef<Publicaciones> _Publicaciones;
		
		private EntityRef<Usuarios> _Usuarios;
		
		private EntityRef<Videos> _Videos;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDcomentariosChanging(long value);
    partial void OnIDcomentariosChanged();
    partial void OnIDusuarioChanging(System.Nullable<long> value);
    partial void OnIDusuarioChanged();
    partial void OnIDvideoChanging(System.Nullable<long> value);
    partial void OnIDvideoChanged();
    partial void OndescripcioncomentariosChanging(string value);
    partial void OndescripcioncomentariosChanged();
    partial void OnIDpublicacionChanging(System.Nullable<long> value);
    partial void OnIDpublicacionChanged();
    #endregion
		
		public Comentarios()
		{
			this._Publicaciones = default(EntityRef<Publicaciones>);
			this._Usuarios = default(EntityRef<Usuarios>);
			this._Videos = default(EntityRef<Videos>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDcomentarios", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IDcomentarios
		{
			get
			{
				return this._IDcomentarios;
			}
			set
			{
				if ((this._IDcomentarios != value))
				{
					this.OnIDcomentariosChanging(value);
					this.SendPropertyChanging();
					this._IDcomentarios = value;
					this.SendPropertyChanged("IDcomentarios");
					this.OnIDcomentariosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDusuario", DbType="BigInt")]
		public System.Nullable<long> IDusuario
		{
			get
			{
				return this._IDusuario;
			}
			set
			{
				if ((this._IDusuario != value))
				{
					if (this._Usuarios.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDusuarioChanging(value);
					this.SendPropertyChanging();
					this._IDusuario = value;
					this.SendPropertyChanged("IDusuario");
					this.OnIDusuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDvideo", DbType="BigInt")]
		public System.Nullable<long> IDvideo
		{
			get
			{
				return this._IDvideo;
			}
			set
			{
				if ((this._IDvideo != value))
				{
					if (this._Videos.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDvideoChanging(value);
					this.SendPropertyChanging();
					this._IDvideo = value;
					this.SendPropertyChanged("IDvideo");
					this.OnIDvideoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descripcioncomentarios", DbType="NVarChar(1000)")]
		public string descripcioncomentarios
		{
			get
			{
				return this._descripcioncomentarios;
			}
			set
			{
				if ((this._descripcioncomentarios != value))
				{
					this.OndescripcioncomentariosChanging(value);
					this.SendPropertyChanging();
					this._descripcioncomentarios = value;
					this.SendPropertyChanged("descripcioncomentarios");
					this.OndescripcioncomentariosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDpublicacion", DbType="BigInt")]
		public System.Nullable<long> IDpublicacion
		{
			get
			{
				return this._IDpublicacion;
			}
			set
			{
				if ((this._IDpublicacion != value))
				{
					if (this._Publicaciones.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDpublicacionChanging(value);
					this.SendPropertyChanging();
					this._IDpublicacion = value;
					this.SendPropertyChanged("IDpublicacion");
					this.OnIDpublicacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Publicaciones_Comentarios", Storage="_Publicaciones", ThisKey="IDpublicacion", OtherKey="IDPublicacion", IsForeignKey=true)]
		public Publicaciones Publicaciones
		{
			get
			{
				return this._Publicaciones.Entity;
			}
			set
			{
				Publicaciones previousValue = this._Publicaciones.Entity;
				if (((previousValue != value) 
							|| (this._Publicaciones.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Publicaciones.Entity = null;
						previousValue.Comentarios.Remove(this);
					}
					this._Publicaciones.Entity = value;
					if ((value != null))
					{
						value.Comentarios.Add(this);
						this._IDpublicacion = value.IDPublicacion;
					}
					else
					{
						this._IDpublicacion = default(Nullable<long>);
					}
					this.SendPropertyChanged("Publicaciones");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuarios_Comentarios", Storage="_Usuarios", ThisKey="IDusuario", OtherKey="IDusuario", IsForeignKey=true)]
		public Usuarios Usuarios
		{
			get
			{
				return this._Usuarios.Entity;
			}
			set
			{
				Usuarios previousValue = this._Usuarios.Entity;
				if (((previousValue != value) 
							|| (this._Usuarios.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuarios.Entity = null;
						previousValue.Comentarios.Remove(this);
					}
					this._Usuarios.Entity = value;
					if ((value != null))
					{
						value.Comentarios.Add(this);
						this._IDusuario = value.IDusuario;
					}
					else
					{
						this._IDusuario = default(Nullable<long>);
					}
					this.SendPropertyChanged("Usuarios");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Videos_Comentarios", Storage="_Videos", ThisKey="IDvideo", OtherKey="IDVideos", IsForeignKey=true)]
		public Videos Videos
		{
			get
			{
				return this._Videos.Entity;
			}
			set
			{
				Videos previousValue = this._Videos.Entity;
				if (((previousValue != value) 
							|| (this._Videos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Videos.Entity = null;
						previousValue.Comentarios.Remove(this);
					}
					this._Videos.Entity = value;
					if ((value != null))
					{
						value.Comentarios.Add(this);
						this._IDvideo = value.IDVideos;
					}
					else
					{
						this._IDvideo = default(Nullable<long>);
					}
					this.SendPropertyChanged("Videos");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Imagenes")]
	public partial class Imagenes : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IDImagenes;
		
		private System.Nullable<long> _IDpublicacion;
		
		private string _DescripcionImagen;
		
		private System.Nullable<int> _Tamanoimagen;
		
		private EntityRef<Publicaciones> _Publicaciones;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDImagenesChanging(long value);
    partial void OnIDImagenesChanged();
    partial void OnIDpublicacionChanging(System.Nullable<long> value);
    partial void OnIDpublicacionChanged();
    partial void OnDescripcionImagenChanging(string value);
    partial void OnDescripcionImagenChanged();
    partial void OnTamanoimagenChanging(System.Nullable<int> value);
    partial void OnTamanoimagenChanged();
    #endregion
		
		public Imagenes()
		{
			this._Publicaciones = default(EntityRef<Publicaciones>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDImagenes", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IDImagenes
		{
			get
			{
				return this._IDImagenes;
			}
			set
			{
				if ((this._IDImagenes != value))
				{
					this.OnIDImagenesChanging(value);
					this.SendPropertyChanging();
					this._IDImagenes = value;
					this.SendPropertyChanged("IDImagenes");
					this.OnIDImagenesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDpublicacion", DbType="BigInt")]
		public System.Nullable<long> IDpublicacion
		{
			get
			{
				return this._IDpublicacion;
			}
			set
			{
				if ((this._IDpublicacion != value))
				{
					if (this._Publicaciones.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDpublicacionChanging(value);
					this.SendPropertyChanging();
					this._IDpublicacion = value;
					this.SendPropertyChanged("IDpublicacion");
					this.OnIDpublicacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescripcionImagen", DbType="NVarChar(100)")]
		public string DescripcionImagen
		{
			get
			{
				return this._DescripcionImagen;
			}
			set
			{
				if ((this._DescripcionImagen != value))
				{
					this.OnDescripcionImagenChanging(value);
					this.SendPropertyChanging();
					this._DescripcionImagen = value;
					this.SendPropertyChanged("DescripcionImagen");
					this.OnDescripcionImagenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tamanoimagen", DbType="Int")]
		public System.Nullable<int> Tamanoimagen
		{
			get
			{
				return this._Tamanoimagen;
			}
			set
			{
				if ((this._Tamanoimagen != value))
				{
					this.OnTamanoimagenChanging(value);
					this.SendPropertyChanging();
					this._Tamanoimagen = value;
					this.SendPropertyChanged("Tamanoimagen");
					this.OnTamanoimagenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Publicaciones_Imagenes", Storage="_Publicaciones", ThisKey="IDpublicacion", OtherKey="IDPublicacion", IsForeignKey=true)]
		public Publicaciones Publicaciones
		{
			get
			{
				return this._Publicaciones.Entity;
			}
			set
			{
				Publicaciones previousValue = this._Publicaciones.Entity;
				if (((previousValue != value) 
							|| (this._Publicaciones.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Publicaciones.Entity = null;
						previousValue.Imagenes.Remove(this);
					}
					this._Publicaciones.Entity = value;
					if ((value != null))
					{
						value.Imagenes.Add(this);
						this._IDpublicacion = value.IDPublicacion;
					}
					else
					{
						this._IDpublicacion = default(Nullable<long>);
					}
					this.SendPropertyChanged("Publicaciones");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Publicaciones")]
	public partial class Publicaciones : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IDPublicacion;
		
		private System.Nullable<long> _IDUsuario;
		
		private string _Titulo;
		
		private string _Descripcion;
		
		private System.Nullable<long> _IDCategoria;
		
		private System.Nullable<System.TimeSpan> _Fecha;
		
		private System.Nullable<System.DateTime> _Hora;
		
		private EntitySet<Comentarios> _Comentarios;
		
		private EntitySet<Imagenes> _Imagenes;
		
		private EntitySet<Videos> _Videos;
		
		private EntityRef<Categorias> _Categorias;
		
		private EntityRef<Usuarios> _Usuarios;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDPublicacionChanging(long value);
    partial void OnIDPublicacionChanged();
    partial void OnIDUsuarioChanging(System.Nullable<long> value);
    partial void OnIDUsuarioChanged();
    partial void OnTituloChanging(string value);
    partial void OnTituloChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    partial void OnIDCategoriaChanging(System.Nullable<long> value);
    partial void OnIDCategoriaChanged();
    partial void OnFechaChanging(System.Nullable<System.TimeSpan> value);
    partial void OnFechaChanged();
    partial void OnHoraChanging(System.Nullable<System.DateTime> value);
    partial void OnHoraChanged();
    #endregion
		
		public Publicaciones()
		{
			this._Comentarios = new EntitySet<Comentarios>(new Action<Comentarios>(this.attach_Comentarios), new Action<Comentarios>(this.detach_Comentarios));
			this._Imagenes = new EntitySet<Imagenes>(new Action<Imagenes>(this.attach_Imagenes), new Action<Imagenes>(this.detach_Imagenes));
			this._Videos = new EntitySet<Videos>(new Action<Videos>(this.attach_Videos), new Action<Videos>(this.detach_Videos));
			this._Categorias = default(EntityRef<Categorias>);
			this._Usuarios = default(EntityRef<Usuarios>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPublicacion", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IDPublicacion
		{
			get
			{
				return this._IDPublicacion;
			}
			set
			{
				if ((this._IDPublicacion != value))
				{
					this.OnIDPublicacionChanging(value);
					this.SendPropertyChanging();
					this._IDPublicacion = value;
					this.SendPropertyChanged("IDPublicacion");
					this.OnIDPublicacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDUsuario", DbType="BigInt")]
		public System.Nullable<long> IDUsuario
		{
			get
			{
				return this._IDUsuario;
			}
			set
			{
				if ((this._IDUsuario != value))
				{
					if (this._Usuarios.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDUsuarioChanging(value);
					this.SendPropertyChanging();
					this._IDUsuario = value;
					this.SendPropertyChanged("IDUsuario");
					this.OnIDUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Titulo", DbType="NVarChar(100)")]
		public string Titulo
		{
			get
			{
				return this._Titulo;
			}
			set
			{
				if ((this._Titulo != value))
				{
					this.OnTituloChanging(value);
					this.SendPropertyChanging();
					this._Titulo = value;
					this.SendPropertyChanged("Titulo");
					this.OnTituloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCategoria", DbType="BigInt")]
		public System.Nullable<long> IDCategoria
		{
			get
			{
				return this._IDCategoria;
			}
			set
			{
				if ((this._IDCategoria != value))
				{
					if (this._Categorias.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDCategoriaChanging(value);
					this.SendPropertyChanging();
					this._IDCategoria = value;
					this.SendPropertyChanged("IDCategoria");
					this.OnIDCategoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="Time")]
		public System.Nullable<System.TimeSpan> Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hora", DbType="Date")]
		public System.Nullable<System.DateTime> Hora
		{
			get
			{
				return this._Hora;
			}
			set
			{
				if ((this._Hora != value))
				{
					this.OnHoraChanging(value);
					this.SendPropertyChanging();
					this._Hora = value;
					this.SendPropertyChanged("Hora");
					this.OnHoraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Publicaciones_Comentarios", Storage="_Comentarios", ThisKey="IDPublicacion", OtherKey="IDpublicacion")]
		public EntitySet<Comentarios> Comentarios
		{
			get
			{
				return this._Comentarios;
			}
			set
			{
				this._Comentarios.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Publicaciones_Imagenes", Storage="_Imagenes", ThisKey="IDPublicacion", OtherKey="IDpublicacion")]
		public EntitySet<Imagenes> Imagenes
		{
			get
			{
				return this._Imagenes;
			}
			set
			{
				this._Imagenes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Publicaciones_Videos", Storage="_Videos", ThisKey="IDPublicacion", OtherKey="IDpublicacion")]
		public EntitySet<Videos> Videos
		{
			get
			{
				return this._Videos;
			}
			set
			{
				this._Videos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Categorias_Publicaciones", Storage="_Categorias", ThisKey="IDCategoria", OtherKey="IDCategoria", IsForeignKey=true)]
		public Categorias Categorias
		{
			get
			{
				return this._Categorias.Entity;
			}
			set
			{
				Categorias previousValue = this._Categorias.Entity;
				if (((previousValue != value) 
							|| (this._Categorias.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Categorias.Entity = null;
						previousValue.Publicaciones.Remove(this);
					}
					this._Categorias.Entity = value;
					if ((value != null))
					{
						value.Publicaciones.Add(this);
						this._IDCategoria = value.IDCategoria;
					}
					else
					{
						this._IDCategoria = default(Nullable<long>);
					}
					this.SendPropertyChanged("Categorias");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuarios_Publicaciones", Storage="_Usuarios", ThisKey="IDUsuario", OtherKey="IDusuario", IsForeignKey=true)]
		public Usuarios Usuarios
		{
			get
			{
				return this._Usuarios.Entity;
			}
			set
			{
				Usuarios previousValue = this._Usuarios.Entity;
				if (((previousValue != value) 
							|| (this._Usuarios.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuarios.Entity = null;
						previousValue.Publicaciones.Remove(this);
					}
					this._Usuarios.Entity = value;
					if ((value != null))
					{
						value.Publicaciones.Add(this);
						this._IDUsuario = value.IDusuario;
					}
					else
					{
						this._IDUsuario = default(Nullable<long>);
					}
					this.SendPropertyChanged("Usuarios");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Comentarios(Comentarios entity)
		{
			this.SendPropertyChanging();
			entity.Publicaciones = this;
		}
		
		private void detach_Comentarios(Comentarios entity)
		{
			this.SendPropertyChanging();
			entity.Publicaciones = null;
		}
		
		private void attach_Imagenes(Imagenes entity)
		{
			this.SendPropertyChanging();
			entity.Publicaciones = this;
		}
		
		private void detach_Imagenes(Imagenes entity)
		{
			this.SendPropertyChanging();
			entity.Publicaciones = null;
		}
		
		private void attach_Videos(Videos entity)
		{
			this.SendPropertyChanging();
			entity.Publicaciones = this;
		}
		
		private void detach_Videos(Videos entity)
		{
			this.SendPropertyChanging();
			entity.Publicaciones = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Usuarios")]
	public partial class Usuarios : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IDusuario;
		
		private string _Nombre;
		
		private string _App;
		
		private string _Apm;
		
		private string _Contraseña;
		
		private string _Correo;
		
		private EntitySet<Actividades> _Actividades;
		
		private EntitySet<Comentarios> _Comentarios;
		
		private EntitySet<Publicaciones> _Publicaciones;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDusuarioChanging(long value);
    partial void OnIDusuarioChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnAppChanging(string value);
    partial void OnAppChanged();
    partial void OnApmChanging(string value);
    partial void OnApmChanged();
    partial void OnContraseñaChanging(string value);
    partial void OnContraseñaChanged();
    partial void OnCorreoChanging(string value);
    partial void OnCorreoChanged();
    #endregion
		
		public Usuarios()
		{
			this._Actividades = new EntitySet<Actividades>(new Action<Actividades>(this.attach_Actividades), new Action<Actividades>(this.detach_Actividades));
			this._Comentarios = new EntitySet<Comentarios>(new Action<Comentarios>(this.attach_Comentarios), new Action<Comentarios>(this.detach_Comentarios));
			this._Publicaciones = new EntitySet<Publicaciones>(new Action<Publicaciones>(this.attach_Publicaciones), new Action<Publicaciones>(this.detach_Publicaciones));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDusuario", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IDusuario
		{
			get
			{
				return this._IDusuario;
			}
			set
			{
				if ((this._IDusuario != value))
				{
					this.OnIDusuarioChanging(value);
					this.SendPropertyChanging();
					this._IDusuario = value;
					this.SendPropertyChanged("IDusuario");
					this.OnIDusuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(100)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_App", DbType="NVarChar(100)")]
		public string App
		{
			get
			{
				return this._App;
			}
			set
			{
				if ((this._App != value))
				{
					this.OnAppChanging(value);
					this.SendPropertyChanging();
					this._App = value;
					this.SendPropertyChanged("App");
					this.OnAppChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apm", DbType="NVarChar(100)")]
		public string Apm
		{
			get
			{
				return this._Apm;
			}
			set
			{
				if ((this._Apm != value))
				{
					this.OnApmChanging(value);
					this.SendPropertyChanging();
					this._Apm = value;
					this.SendPropertyChanged("Apm");
					this.OnApmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contraseña", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Contraseña
		{
			get
			{
				return this._Contraseña;
			}
			set
			{
				if ((this._Contraseña != value))
				{
					this.OnContraseñaChanging(value);
					this.SendPropertyChanging();
					this._Contraseña = value;
					this.SendPropertyChanged("Contraseña");
					this.OnContraseñaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Correo", DbType="NVarChar(500)")]
		public string Correo
		{
			get
			{
				return this._Correo;
			}
			set
			{
				if ((this._Correo != value))
				{
					this.OnCorreoChanging(value);
					this.SendPropertyChanging();
					this._Correo = value;
					this.SendPropertyChanged("Correo");
					this.OnCorreoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuarios_Actividades", Storage="_Actividades", ThisKey="IDusuario", OtherKey="IDUsuario")]
		public EntitySet<Actividades> Actividades
		{
			get
			{
				return this._Actividades;
			}
			set
			{
				this._Actividades.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuarios_Comentarios", Storage="_Comentarios", ThisKey="IDusuario", OtherKey="IDusuario")]
		public EntitySet<Comentarios> Comentarios
		{
			get
			{
				return this._Comentarios;
			}
			set
			{
				this._Comentarios.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuarios_Publicaciones", Storage="_Publicaciones", ThisKey="IDusuario", OtherKey="IDUsuario")]
		public EntitySet<Publicaciones> Publicaciones
		{
			get
			{
				return this._Publicaciones;
			}
			set
			{
				this._Publicaciones.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Actividades(Actividades entity)
		{
			this.SendPropertyChanging();
			entity.Usuarios = this;
		}
		
		private void detach_Actividades(Actividades entity)
		{
			this.SendPropertyChanging();
			entity.Usuarios = null;
		}
		
		private void attach_Comentarios(Comentarios entity)
		{
			this.SendPropertyChanging();
			entity.Usuarios = this;
		}
		
		private void detach_Comentarios(Comentarios entity)
		{
			this.SendPropertyChanging();
			entity.Usuarios = null;
		}
		
		private void attach_Publicaciones(Publicaciones entity)
		{
			this.SendPropertyChanging();
			entity.Usuarios = this;
		}
		
		private void detach_Publicaciones(Publicaciones entity)
		{
			this.SendPropertyChanging();
			entity.Usuarios = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Videos")]
	public partial class Videos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IDVideos;
		
		private string _video;
		
		private System.Nullable<long> _IDpublicacion;
		
		private EntitySet<Comentarios> _Comentarios;
		
		private EntityRef<Publicaciones> _Publicaciones;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDVideosChanging(long value);
    partial void OnIDVideosChanged();
    partial void OnvideoChanging(string value);
    partial void OnvideoChanged();
    partial void OnIDpublicacionChanging(System.Nullable<long> value);
    partial void OnIDpublicacionChanged();
    #endregion
		
		public Videos()
		{
			this._Comentarios = new EntitySet<Comentarios>(new Action<Comentarios>(this.attach_Comentarios), new Action<Comentarios>(this.detach_Comentarios));
			this._Publicaciones = default(EntityRef<Publicaciones>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDVideos", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IDVideos
		{
			get
			{
				return this._IDVideos;
			}
			set
			{
				if ((this._IDVideos != value))
				{
					this.OnIDVideosChanging(value);
					this.SendPropertyChanging();
					this._IDVideos = value;
					this.SendPropertyChanged("IDVideos");
					this.OnIDVideosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_video", DbType="NVarChar(100)")]
		public string video
		{
			get
			{
				return this._video;
			}
			set
			{
				if ((this._video != value))
				{
					this.OnvideoChanging(value);
					this.SendPropertyChanging();
					this._video = value;
					this.SendPropertyChanged("video");
					this.OnvideoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDpublicacion", DbType="BigInt")]
		public System.Nullable<long> IDpublicacion
		{
			get
			{
				return this._IDpublicacion;
			}
			set
			{
				if ((this._IDpublicacion != value))
				{
					if (this._Publicaciones.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDpublicacionChanging(value);
					this.SendPropertyChanging();
					this._IDpublicacion = value;
					this.SendPropertyChanged("IDpublicacion");
					this.OnIDpublicacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Videos_Comentarios", Storage="_Comentarios", ThisKey="IDVideos", OtherKey="IDvideo")]
		public EntitySet<Comentarios> Comentarios
		{
			get
			{
				return this._Comentarios;
			}
			set
			{
				this._Comentarios.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Publicaciones_Videos", Storage="_Publicaciones", ThisKey="IDpublicacion", OtherKey="IDPublicacion", IsForeignKey=true)]
		public Publicaciones Publicaciones
		{
			get
			{
				return this._Publicaciones.Entity;
			}
			set
			{
				Publicaciones previousValue = this._Publicaciones.Entity;
				if (((previousValue != value) 
							|| (this._Publicaciones.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Publicaciones.Entity = null;
						previousValue.Videos.Remove(this);
					}
					this._Publicaciones.Entity = value;
					if ((value != null))
					{
						value.Videos.Add(this);
						this._IDpublicacion = value.IDPublicacion;
					}
					else
					{
						this._IDpublicacion = default(Nullable<long>);
					}
					this.SendPropertyChanged("Publicaciones");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Comentarios(Comentarios entity)
		{
			this.SendPropertyChanging();
			entity.Videos = this;
		}
		
		private void detach_Comentarios(Comentarios entity)
		{
			this.SendPropertyChanging();
			entity.Videos = null;
		}
	}
}
#pragma warning restore 1591
